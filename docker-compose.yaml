version: '3.4'

volumes:
  grafana-storage:
    external: false
  loki-storage:
    external: false

services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - 3000:3000
      #- 9080:9080
      #- 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - grafana
      - loki
      - promtail

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    # ports:
    #   #- 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_AUTH_ANONYMOUS_ENABLED=false
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"
        EOF
        /run.sh
    volumes:
      - grafana-storage:/var/lib/grafana
      #- ./ds.yaml:/usr/share/grafana/conf/provisioning/datasources/ds.yaml

  loki:
    container_name: loki
    image: grafana/loki
    command: "-config.file=/etc/loki/config.yaml"
    # ports:
    #   - 3100:3100
    volumes:
      # - loki-storage:/loki
      - ./loki-config.yaml:/etc/loki/config.yaml

  promtail:
    container_name: promtail
    image: grafana/promtail
    # ports:
    #   #- 9080:9080
    volumes:
      - ./promtail.yaml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock

  wireguard:
    container_name: wireguard
    image: ghcr.io/wg-easy/wg-easy
    environment:
      - WG_HOST=${WG_HOST}
      - PASSWORD=${WG_PASSWORD}
      - LANG=ru
      - UI_TRAFFIC_STATS=true
      #- WG_ALLOWED_IPS=${WG_ALLOWED_IPS}
    volumes:
      - ~/.wg-easy:/etc/wireguard
    ports:
      - 51820:51820/udp
      - 51821:51821/tcp
    cap_add: 
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped

  shadowsocks:
    container_name: shadowsocks
    image: ghcr.io/shadowsocks/ssserver-rust
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /etc/shadowsocks-rust/config.json
        {
          "server": "0.0.0.0",
          "server_port": 8388,
          "password": "${SHADOWSOCKS_PASSWORD}",
          "method": "aes-256-gcm",
        }
        EOF
        ssserver --log-without-time -a nobody -c /etc/shadowsocks-rust/config.json
    ports:
      - 8388:8388
    restart: unless-stopped

  torrserver:
    image: ghcr.io/yourok/torrserver
    container_name: torrserver
    environment:
      - TS_PORT=5665
      - TS_DONTKILL=1
      - TS_HTTPAUTH=1
      - TS_CONF_PATH=/opt/ts/config
      - TS_TORR_DIR=/opt/ts/torrents
    volumes:
      - './CACHE:/opt/ts/torrents'
      - './CONFIG:/opt/ts/config'
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /opt/ts/config/accs.db
        {
          "admin": "${TS_PASSWORD}"
        }
        EOF
        /docker-entrypoint.sh
    ports:
      - '5665:5665'
    restart: unless-stopped
